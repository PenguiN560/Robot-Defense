#define TA			// This is a TA script

piece  base, rotp,body ,flare, turret, sleeve, barrel,dish1,dish2;

#include "sfxtype.h"
#include "exptype.h"


static-var  OK, restore_delay, gun_0;

// Signal definitions
#define SIG_AIM				2

#define SMOKEPIECE1 base
#define EXPLODEPIECE1 dish1
#define EXPLODEPIECE2 dish2

#include "Explodepartsnorock.h"


Create()
{
	dont-cache barrel;
	dont-cache sleeve;
	dont-cache turret;
	dont-cache flare;
	dont-cache rotp;
	dont-cache dish1;
	dont-cache dish2;

	restore_delay=3000;
	hide flare;
	start-script SmokeUnit();
}

SetMaxReloadTime(time)
{
	restore_delay = time * 2;
}
RestoreAfterDelay()
{ 		
		sleep restore_delay;
		stop-spin rotp around z-axis;
		turn dish1 to y-axis <0> speed <100>;
		turn dish2 to y-axis <0> speed <100>;
  
 }
AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;

	spin rotp around z-axis speed <100>;
	turn turret to y-axis heading speed <40>;
	TURN sleeve to x-axis (0 - pitch) SPEED <30>;
	turn dish1 to y-axis <90> speed <100>;
	turn dish2 to y-axis <-90> speed <100>;

	wait-for-turn turret around y-axis;
	wait-for-turn sleeve around x-axis;
  	start-script RestoreAfterDelay();	
	return(TRUE);
}

FirePrimary()
{
move barrel to z-axis [-2] speed [500];
SHOW flare;
sleep 150;
move barrel to z-axis [0] speed [5];
HIDE flare;
sleep 1000;
spin rotp around z-axis speed <0>;
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

QueryPrimary(piecenum)
{
piecenum = flare;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	hide flare;
	if( severity <= 25 )
	{
		corpsetype = 1;
		
		explode barrel type BITMAPONLY | BITMAP1;
		explode body type BITMAPONLY | BITMAP2;
		explode turret type BITMAPONLY | BITMAP2;
		explode sleeve type BITMAPONLY | BITMAP3;
	}
	if( severity <= 50 )
	{
		if( OK )
		{
			corpsetype = 2;
		}
		if( !OK )
		{
			corpsetype = 3;
		}
		explode body type SHATTER | BITMAP1;
		explode turret type BITMAPONLY | BITMAP2;
		explode barrel type FALL | BITMAP3;
		explode sleeve type FALL | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		if( OK )
		{
			corpsetype = 3;
		}
		if( !OK )
		{
			corpsetype = 4;
		}
		explode turret type SHATTER | BITMAP1;
		explode body type BITMAPONLY | BITMAP2;
		explode sleeve type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode barrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode turret type BITMAPONLY | BITMAP5;
		return (0);
	}
	corpsetype = 4;
	explode turret type SHATTER | EXPLODE_ON_HIT | BITMAP1;
	explode body type BITMAPONLY | BITMAP2;
	explode sleeve type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode barrel type BITMAPONLY | BITMAP5;
}
