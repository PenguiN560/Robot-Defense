#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  torso, head, arms, belly, lthigh, lleg, rleg, flare1, flare2, pelvis, rthigh, lfoot, rfoot, ground;

static-var  restore_delay,gun_0;

// Signal definitions
#define SIG_MOVE			2
#define SIG_AIM			4

#define SMOKEPIECE1 torso


walk()
{
	while( TRUE )
	{
		if( TRUE )
		{
		//	move belly to y-axis [0.0] now;
			move lthigh to y-axis [0.0] now;
			move lleg to y-axis [0.6] now;
			move rleg to y-axis [0.0] now;
		//	move torso to y-axis [-0.4] now;
			move arms to y-axis [-0.0] now;
			turn pelvis to z-axis <2.8> now;
		//	turn belly to x-axis <-6.0> now;
			turn rthigh to x-axis <14.4> now;
			turn lthigh to x-axis <-44.7> now;
			turn lleg to x-axis <-1.0> now;
			turn lfoot to x-axis <10.9> now;
			turn rleg to x-axis <6.3> now;
			turn rfoot to x-axis <-13.7> now;
		//	turn torso to x-axis <-0.3> now;
			sleep 130;
		}
		if( TRUE )
		{
			move lthigh to y-axis [0.6] now;
			move lleg to y-axis [0.0] now;
		//	move torso to y-axis [0.0] now;
			turn pelvis to z-axis <6.7> now;
		//	turn belly to x-axis <-4.6> now;
			turn rthigh to x-axis <21.5> now;
			turn lthigh to x-axis <-23.9> now;
			turn lleg to x-axis <7.4> now;
			turn lfoot to x-axis <16.5> now;
			turn rleg to x-axis <12.7> now;
			turn rfoot to x-axis <-3.5> now;
		//	turn torso to x-axis <2.8> now;
			sleep 130;
		}
		if( TRUE )
		{
			turn belly to x-axis <3.2> now;
			sleep 130;
		}
		if( TRUE )
		{
		//	turn belly to x-axis <2.1> now;
		//	turn torso to x-axis <11.6> now;
			sleep 130;
		}
		if( TRUE )
		{
			move rthigh to y-axis [0.2] now;
			move lthigh to y-axis [0.3] now;
			move rleg to y-axis [0.5] now;
		//	move torso to y-axis [-0.1] now;
			turn pelvis to z-axis <5.3> now;
		//	turn belly to x-axis <0.0> now;
			turn rthigh to x-axis <14.1> now;
			turn lthigh to x-axis <-14.4> now;
			turn lfoot to x-axis <6.3> now;
			turn rleg to x-axis <8.1> now;
			turn rfoot to x-axis <-2.5> now;
		//	turn torso to x-axis <5.3> now;
			sleep 130;
		}
		if( TRUE )
		{
			move lthigh to y-axis [0.1] now;
			move rleg to y-axis [0.8] now;
		//	move torso to y-axis [-0.2] now;
			turn pelvis to z-axis <3.5> now;
		//	turn belly to x-axis <5.3> now;
			turn rthigh to x-axis <3.5> now;
			turn lthigh to x-axis <-1.4> now;
			turn lfoot to x-axis <-6.0> now;
		//	turn torso to x-axis <3.2> now;
			sleep 120;
		}
		if( TRUE )
		{
			move lthigh to y-axis [0.0] now;
		//	move torso to y-axis [-0.1] now;
			turn pelvis to z-axis <0.0> now;
		//	turn belly to x-axis <2.5> now;
			turn rthigh to x-axis <-6.7> now;
			turn lthigh to x-axis <4.2> now;
			turn lfoot to x-axis <-11.6> now;
		//	turn torso to x-axis <8.1> now;
			sleep 110;
		}
		if( TRUE )
		{
			move rleg to y-axis [0.8] now;
		//	move torso to y-axis [0.0] now;
			turn pelvis to z-axis <-1.4> now;
		//	turn belly to x-axis <-3.9> now;
			turn rthigh to x-axis <-17.9> now;
			turn lthigh to x-axis <8.8> now;
		//	turn torso to x-axis <7.4> now;
			sleep 110;
		}
		if( TRUE )
		{
			move rleg to y-axis [0.1] now;
			turn pelvis to z-axis <-2.8> now;
		//	turn belly to x-axis <-7.4> now;
			turn rthigh to x-axis <-36.9> now;
			turn lthigh to x-axis <15.8> now;
			turn lfoot to x-axis <-6.3> now;
			turn rleg to x-axis <-9.8> now;
		//	turn torso to x-axis <1.8> now;
			sleep 110;
		}
		if( TRUE )
		{
			move rthigh to y-axis [0.6] now;
			move lleg to y-axis [0.4] now;
		//	move torso to y-axis [-0.1] now;
			turn pelvis to z-axis <-6.7> now;
		//	turn belly to x-axis <1.1> now;
			turn lthigh to x-axis <22.9> now;
			turn lfoot to x-axis <-2.8> now;
			turn rleg to x-axis <10.2> now;
			turn rfoot to x-axis <27.4> now;
		//	turn torso to x-axis <-2.5> now;
			sleep 130;
		}
		if( TRUE )
		{
		//	turn belly to x-axis <13.0> now;
			sleep 130;
		}
		if( TRUE )
		{
		//	turn belly to x-axis <9.1> now;
		//	turn torso to x-axis <8.4> now;
			sleep 130;
		}
		if( TRUE )
		{
			move rthigh to y-axis [0.3] now;
			move lleg to y-axis [0.7] now;
		//	move torso to y-axis [-0.1] now;
			turn pelvis to z-axis <-5.3> now;
		//	turn belly to x-axis <7.0> now;
			turn rthigh to x-axis <-22.5> now;
			turn lthigh to x-axis <16.2> now;
			turn lfoot to x-axis <0.0> now;
			turn rfoot to x-axis <12.3> now;
		//	turn torso to x-axis <1.8> now;
			sleep 120;
		}
		if( TRUE )
		{
			move rthigh to y-axis [0.1] now;
			move lleg to y-axis [1.0] now;
		//	move torso to y-axis [-0.2] now;
			turn pelvis to z-axis <-3.5> now;
		//	turn belly to x-axis <-3.2> now;
			turn rthigh to x-axis <-10.5> now;
			turn lthigh to x-axis <5.3> now;
			turn lfoot to x-axis <-0.7> now;
			turn rfoot to x-axis <0.3> now;
		//	turn torso to x-axis <-3.9> now;
			sleep 130;
		}
		if( TRUE )
		{
			move rthigh to y-axis [0.0] now;
		//	move torso to y-axis [-0.3] now;
			turn pelvis to z-axis <0.0> now;
		//	turn belly to x-axis <-4.2> now;
			turn rthigh to x-axis <0.7> now;
			turn lthigh to x-axis <-12.3> now;
			turn rfoot to x-axis <-11.6> now;
		//	turn torso to x-axis <-0.7> now;
			sleep 130;
		}
		move lleg to y-axis [0.9] now;
	//	move torso to y-axis [-0.4] now;
		turn pelvis to z-axis <1.4> now;
	//	turn belly to x-axis <-5.3> now;
		turn rthigh to x-axis <3.5> now;
		turn lthigh to x-axis <-23.2> now;
	//	turn torso to x-axis <0.7> now;
		sleep 130;
	}
}
#include "SmokeUnit.h"

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	call-script walk();
}

StopMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	turn pelvis to z-axis <0.0> speed <150.0>;
	turn belly to x-axis <0.0> speed <150.0>;
	move torso to y-axis [0.0] speed [1.0];
	turn torso to x-axis <0.0> speed <150.0>;
	turn rthigh to x-axis <0.0> speed <150.0>;
	turn rleg to x-axis <0.0> speed <150.0>;
	turn rfoot to x-axis <0.0> speed <150.0>;
	turn lthigh to x-axis <0.0> speed <150.0>;
	turn lleg to x-axis <0.0> speed <150.0>;
	turn lfoot to x-axis <0.0> speed <150.0>;
}

flames()
 { var t;
   while (get BUILD_PERCENT_LEFT)
    { sleep 500; }
   while (1)
    { t=300+rand(50,1000);
      sleep t;
      show flare1;
      sleep 150;
      hide flare1;
      show flare2;
      sleep 100;
      hide flare2;
        }
  }

Create()
{
	hide flare1;
	hide flare2;
	gun_0=0;
	restore_delay = 3000;
	start-script StopMoving();
	start-script flames();
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
}

QueryPrimary(piecenum)
{
if ( gun_0 == 0)
	{
	piecenum = flare1;
	}

if ( gun_0 == 1)
	{
	piecenum = flare2;
	}
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn torso to y-axis <0.0> speed <90.0>;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn torso to y-axis heading speed <90.0>;
	turn arms to x-axis <0.0> speed <45.0>;
	wait-for-turn torso around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
if (gun_0 == 0)
	{
	show flare1;
	sleep 150;
	hide flare1;
	}
if (gun_0 == 1)
	{
	show flare2;
	sleep 150;
	hide flare2;
	}
gun_0 = !gun_0;
}


AimTertiary(heading, pitch)
{
	return (1);
}

FireTertiary()
{
	sleep 150;
}

AimFromTertiary(piecenum)
{
	piecenum = pelvis;
}

QueryTertiary(piecenum)
{
piecenum = pelvis;
}


Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode belly type BITMAPONLY | BITMAP1;
		explode flare1 type BITMAPONLY | BITMAP2;
		explode ground type BITMAPONLY | BITMAP3;
		explode arms type BITMAPONLY | BITMAP4;
		explode head type BITMAPONLY | BITMAP5;
		explode lfoot type BITMAPONLY | BITMAP1;
		explode lleg type BITMAPONLY | BITMAP2;
		explode lthigh type BITMAPONLY | BITMAP3;
		explode pelvis type BITMAPONLY | BITMAP4;
		explode rfoot type BITMAPONLY | BITMAP5;
		explode rleg type BITMAPONLY | BITMAP1;
		explode rthigh type BITMAPONLY | BITMAP2;
		explode torso type BITMAPONLY | BITMAP3;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode belly type BITMAPONLY | BITMAP1;
		explode ground type FALL | BITMAP3;
		explode arms type FALL | BITMAP4;
		explode head type FALL | BITMAP5;
		explode lfoot type FALL | BITMAP1;
		explode lleg type FALL | BITMAP2;
		explode lthigh type SHATTER | BITMAP3;
		explode pelvis type FALL | BITMAP4;
		explode rfoot type FALL | BITMAP5;
		explode rleg type FALL | BITMAP1;
		explode rthigh type SHATTER | BITMAP2;
		explode torso type BITMAPONLY | BITMAP3;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode belly type BITMAPONLY | BITMAP1;
		explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode arms type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode head type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode lthigh type SHATTER | BITMAP3;
		explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rthigh type SHATTER | BITMAP2;
		explode torso type BITMAPONLY | BITMAP3;
		return (0);
	}
	corpsetype = 3;
	explode belly type BITMAPONLY | BITMAP1;
	explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode arms type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode head type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode lthigh type SHATTER | EXPLODE_ON_HIT | BITMAP3;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rthigh type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode torso type BITMAPONLY | BITMAP3;
}
