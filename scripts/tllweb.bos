piece base,body,turret,flare,elec1,elec2;
static-var restore_delay;

#define SIG_AIM	2
#define SMOKEPIECE1 turret

#include "smokeunit.h"
#include "EXPtype.h"

zaps()
 { var t;
   while (get BUILD_PERCENT_LEFT)
    { sleep 500; }
   while (TRUE)
    { t=300+rand(50,1000);
      sleep t;
      show elec1;
      sleep 75;
      show elec2;
      sleep 60;
      hide elec1;
      sleep 50;
      hide elec2;
      sleep 60;
      show elec1;
      sleep 75;
      show elec2;
      sleep 60;
      hide elec1;
      sleep 50;
      hide elec2;
      sleep 60;
      }
  }


SetMaxReloadTime(time)
{
	restore_delay = time * 2;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	set-signal-mask SIG_AIM;
            spin turret around y-axis speed <80>;
            cache turret;
}



Create()
 { dont-shade turret;
   dont-cache elec1; 
   dont-cache elec2;
   hide elec1;
   hide elec2;
   restore_delay = 3000;

   while( get BUILD_PERCENT_LEFT )
	{
		sleep 1000;
	}
   spin turret around y-axis speed <80>;
   start-script SmokeUnit();
   START-SCRIPT Zaps();
   spin elec1 around x-axis speed <250>;
   spin elec2 around x-axis speed <150>;
  }

AimPrimary(heading,pitch)
 { signal SIG_AIM;
   set-signal-mask SIG_AIM;
   dont-cache turret;
   spin turret around y-axis speed <550> accelerate <30>;
   turn flare to y-axis heading speed <220>;
   wait-for-turn flare around y-axis;
   START-SCRIPT RestoreAfterDelay();
   return(TRUE);
  }

FirePrimary()
 { 
		SHOW flare;
		SHOW elec1;
		SLEEP 20;
		Show elec2;
		Sleep 25;
		Hide elec1;
		Sleep 25;
		hide flare;
		Hide elec2;
		SHOW elec1;
		SLEEP 20;
		Show elec2;
		Sleep 25;
		show flare;
		Hide elec1;
		Sleep 25;
		Hide elec2;
		SHOW elec1;
		SLEEP 20;
		Show elec2;
		Sleep 25;
		Hide elec1;
		hide flare;
		Sleep 25;
		Hide elec2;	
  }

AimFromPrimary(piecenum)
 { piecenum=turret;
  }

QueryPrimary(piecenum)
 { piecenum=flare;
  }

SweetSpot(piecenum)
 { piecenum=base;
  }

Killed( severity, corpsetype )
 { explode turret type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP4;
   explode body type SHATTER | EXPLODE_ON_HIT | BITMAP2;
   explode flare type BITMAPONLY | BITMAP4;
   if (severity <= 25)
    { corpsetype = 1;
      return( 0 );
     }
   if (severity <= 50)
    { corpsetype = 2;
      return( 0 );
     }
   corpsetype = 3;
  }
