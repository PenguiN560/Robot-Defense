#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  torso, turret, tur, rnano, lnano, rspray, lspray, pelvis,
       rleg, arm, rfoot, lleg, lfoot, lthigh, rthigh, base;

static-var  statechg_DesiredState, statechg_StateChanging, bMoving, Static_Var_4, Static_Var_5,
            Static_Var_6, Static_Var_7, spray;


walk()
{
	if( bMoving )
	{
		move pelvis to y-axis [0.900000] now;
		move torso to y-axis [0.900000] now;
		move torso to z-axis [0.000000] now;
		move rleg to z-axis [0.000000] now;
		move rfoot to z-axis [0.000000] now;
		move lleg to z-axis [0.000000] now;
		move lfoot to z-axis [0.000000] now;
		turn torso to x-axis <-10.500000> now;
		turn lthigh to x-axis <-13.000000> now;
		turn rthigh to x-axis <13.000000> now;
		turn rleg to x-axis <-50.598901> now;
		turn rfoot to x-axis <57.000000> now;
		turn lleg to x-axis <13.000000> now;
		turn lfoot to x-axis <0.000000> now;
		sleep 100;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.800000] now;
		move torso to y-axis [0.900000] now;
		turn torso to x-axis <-11.598901> now;
		turn lthigh to x-axis <-7.395604> now;
		turn rthigh to x-axis <-4.598901> now;
		turn rleg to x-axis <-52.697802> now;
		turn rfoot to x-axis <36.598901> now;
		turn lleg to x-axis <21.500000> now;
		turn lfoot to x-axis <-3.895604> now;
		sleep 70;
	}
	if( bMoving )
	{
		turn torso to x-axis <-8.098901> now;
		turn rthigh to x-axis <-7.895604> now;
		sleep 40;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.700000] now;
		turn torso to x-axis <-4.895604> now;
		turn lthigh to x-axis <-5.296703> now;
		turn rthigh to x-axis <-11.598901> now;
		turn rleg to x-axis <-68.197802> now;
		turn rfoot to x-axis <39.000000> now;
		turn lleg to x-axis <28.796703> now;
		turn lfoot to x-axis <-8.098901> now;
		sleep 130;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.600000] now;
		turn torso to x-axis <4.197802> now;
		turn lthigh to x-axis <0.395604> now;
		turn rthigh to x-axis <-22.500000> now;
		turn rleg to x-axis <-38.296703> now;
		turn rfoot to x-axis <61.500000> now;
		turn lleg to x-axis <28.500000> now;
		turn lfoot to x-axis <16.895604> now;
		sleep 10;
	}
	if( bMoving )
	{
		move torso to y-axis [0.800000] now;
		turn torso to x-axis <4.895604> now;
		sleep 30;
	}
	if( bMoving )
	{
		move torso to y-axis [0.400000] now;
		turn torso to x-axis <6.697802> now;
		sleep 80;
	}
	if( bMoving )
	{
		move torso to y-axis [0.700000] now;
		turn torso to x-axis <5.598901> now;
		sleep 30;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.700000] now;
		move torso to y-axis [0.900000] now;
		turn torso to x-axis <0.000000> now;
		turn lthigh to x-axis <12.697802> now;
		turn rthigh to x-axis <-20.000000> now;
		turn rleg to x-axis <-34.500000> now;
		turn rfoot to x-axis <54.500000> now;
		turn lleg to x-axis <7.395604> now;
		turn lfoot to x-axis <19.296703> now;
		sleep 130;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.800000] now;
		turn torso to x-axis <-5.296703> now;
		turn lthigh to x-axis <15.796703> now;
		turn rthigh to x-axis <-17.895604> now;
		turn rleg to x-axis <-27.098901> now;
		turn rfoot to x-axis <45.000000> now;
		turn lleg to x-axis <-19.697802> now;
		turn lfoot to x-axis <27.796703> now;
		sleep 110;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.900000] now;
		turn torso to x-axis <-10.500000> now;
		turn lthigh to x-axis <8.098901> now;
		turn rthigh to x-axis <-13.697802> now;
		turn rleg to x-axis <13.697802> now;
		turn rfoot to x-axis <0.000000> now;
		turn lleg to x-axis <-38.296703> now;
		turn lfoot to x-axis <42.500000> now;
		sleep 100;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.800000] now;
		turn torso to x-axis <-11.395604> now;
		turn lthigh to x-axis <-0.296703> now;
		turn rthigh to x-axis <-11.598901> now;
		turn rleg to x-axis <27.796703> now;
		turn rfoot to x-axis <-11.296703> now;
		turn lleg to x-axis <-62.895604> now;
		turn lfoot to x-axis <67.500000> now;
		sleep 70;
	}
	if( bMoving )
	{
		turn torso to x-axis <-8.098901> now;
		turn lthigh to x-axis <-5.098901> now;
		sleep 40;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.700000] now;
		turn torso to x-axis <-4.197802> now;
		turn lthigh to x-axis <-7.697802> now;
		turn rthigh to x-axis <-7.395604> now;
		turn rleg to x-axis <31.296703> now;
		turn rfoot to x-axis <-9.098901> now;
		turn lleg to x-axis <-64.395604> now;
		turn lfoot to x-axis <34.098901> now;
		sleep 130;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.600000] now;
		move torso to y-axis [0.800000] now;
		turn torso to x-axis <4.197802> now;
		turn lthigh to x-axis <-21.098901> now;
		turn rthigh to x-axis <-1.796703> now;
		turn rleg to x-axis <28.796703> now;
		turn rfoot to x-axis <24.598901> now;
		turn lleg to x-axis <-36.895604> now;
		turn lfoot to x-axis <57.296703> now;
		sleep 10;
	}
	if( bMoving )
	{
		move torso to y-axis [0.600000] now;
		turn torso to x-axis <5.598901> now;
		sleep 30;
	}
	if( bMoving )
	{
		move torso to y-axis [0.400000] now;
		turn torso to x-axis <6.296703> now;
		sleep 80;
	}
	if( bMoving )
	{
		move torso to y-axis [0.800000] now;
		turn torso to x-axis <4.197802> now;
		sleep 30;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.700000] now;
		move torso to y-axis [0.900000] now;
		turn torso to x-axis <0.000000> now;
		turn lthigh to x-axis <-15.796703> now;
		turn rthigh to x-axis <10.197802> now;
		turn rleg to x-axis <-12.697802> now;
		turn lleg to x-axis <-29.197802> now;
		turn lfoot to x-axis <45.395604> now;
		sleep 130;
	}
	move pelvis to y-axis [0.800000] now;
	turn torso to x-axis <-5.296703> now;
	turn lthigh to x-axis <-13.395604> now;
	turn rthigh to x-axis <10.500000> now;
	turn rleg to x-axis <-30.598901> now;
	turn rfoot to x-axis <32.697802> now;
	turn lleg to x-axis <-14.796703> now;
	turn lfoot to x-axis <28.098901> now;
	sleep 110;
}

walklegs()
{
	if( bMoving )
	{
		move pelvis to y-axis [0.900000] now;
		move rleg to z-axis [0.000000] now;
		move rfoot to z-axis [0.000000] now;
		move lleg to z-axis [0.000000] now;
		move lfoot to z-axis [0.000000] now;
		turn lthigh to x-axis <-13.000000> now;
		turn rthigh to x-axis <13.000000> now;
		turn rleg to x-axis <-50.598901> now;
		turn rfoot to x-axis <57.000000> now;
		turn lleg to x-axis <13.000000> now;
		turn lfoot to x-axis <0.000000> now;
		sleep 100;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.800000] now;
		turn lthigh to x-axis <-7.395604> now;
		turn rthigh to x-axis <-4.598901> now;
		turn rleg to x-axis <-52.697802> now;
		turn rfoot to x-axis <36.598901> now;
		turn lleg to x-axis <21.500000> now;
		turn lfoot to x-axis <-3.895604> now;
		sleep 70;
	}
	if( bMoving )
	{
		turn rthigh to x-axis <-7.895604> now;
		sleep 40;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.700000] now;
		turn lthigh to x-axis <-5.296703> now;
		turn rthigh to x-axis <-11.598901> now;
		turn rleg to x-axis <-68.197802> now;
		turn rfoot to x-axis <39.000000> now;
		turn lleg to x-axis <28.796703> now;
		turn lfoot to x-axis <-8.098901> now;
		sleep 130;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.600000] now;
		turn lthigh to x-axis <0.395604> now;
		turn rthigh to x-axis <-22.500000> now;
		turn rleg to x-axis <-38.296703> now;
		turn rfoot to x-axis <61.500000> now;
		turn lleg to x-axis <28.500000> now;
		turn lfoot to x-axis <16.895604> now;
		sleep 10;
	}
	if( bMoving )
	{
		sleep 30;
	}
	if( bMoving )
	{
		sleep 80;
	}
	if( bMoving )
	{
		sleep 30;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.700000] now;
		turn lthigh to x-axis <12.697802> now;
		turn rthigh to x-axis <-20.000000> now;
		turn rleg to x-axis <-34.500000> now;
		turn rfoot to x-axis <54.500000> now;
		turn lleg to x-axis <7.395604> now;
		turn lfoot to x-axis <19.296703> now;
		sleep 130;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.800000] now;
		turn lthigh to x-axis <15.796703> now;
		turn rthigh to x-axis <-17.895604> now;
		turn rleg to x-axis <-27.098901> now;
		turn rfoot to x-axis <45.000000> now;
		turn lleg to x-axis <-19.697802> now;
		turn lfoot to x-axis <27.796703> now;
		sleep 110;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.900000] now;
		turn lthigh to x-axis <8.098901> now;
		turn rthigh to x-axis <-13.697802> now;
		turn rleg to x-axis <13.697802> now;
		turn rfoot to x-axis <0.000000> now;
		turn lleg to x-axis <-38.296703> now;
		turn lfoot to x-axis <42.500000> now;
		sleep 100;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.800000] now;
		turn lthigh to x-axis <-0.296703> now;
		turn rthigh to x-axis <-11.598901> now;
		turn rleg to x-axis <27.796703> now;
		turn rfoot to x-axis <-11.296703> now;
		turn lleg to x-axis <-62.895604> now;
		turn lfoot to x-axis <67.500000> now;
		sleep 70;
	}
	if( bMoving )
	{
		turn lthigh to x-axis <-5.098901> now;
		sleep 40;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.700000] now;
		turn lthigh to x-axis <-7.697802> now;
		turn rthigh to x-axis <-7.395604> now;
		turn rleg to x-axis <31.296703> now;
		turn rfoot to x-axis <-9.098901> now;
		turn lleg to x-axis <-64.395604> now;
		turn lfoot to x-axis <34.098901> now;
		sleep 130;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.600000] now;
		turn lthigh to x-axis <-21.098901> now;
		turn rthigh to x-axis <-1.796703> now;
		turn rleg to x-axis <28.796703> now;
		turn rfoot to x-axis <24.598901> now;
		turn lleg to x-axis <-36.895604> now;
		turn lfoot to x-axis <57.296703> now;
		sleep 10;
	}
	if( bMoving )
	{
		sleep 30;
	}
	if( bMoving )
	{
		sleep 80;
	}
	if( bMoving )
	{
		sleep 30;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.700000] now;
		turn lthigh to x-axis <-15.796703> now;
		turn rthigh to x-axis <10.197802> now;
		turn rleg to x-axis <-12.697802> now;
		turn lleg to x-axis <-29.197802> now;
		turn lfoot to x-axis <45.395604> now;
		sleep 130;
	}
	move pelvis to y-axis [0.800000] now;
	turn lthigh to x-axis <-13.395604> now;
	turn rthigh to x-axis <10.500000> now;
	turn rleg to x-axis <-30.598901> now;
	turn rfoot to x-axis <32.697802> now;
	turn lleg to x-axis <-14.796703> now;
	turn lfoot to x-axis <28.098901> now;
	sleep 110;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = Static_Var_4;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_5 = 1;
				call-script walklegs();
			}
			if( !aiming )
			{
				Static_Var_5 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		if( !moving )
		{
			Static_Var_5 = 1;
			if( justmoved )
			{
				move pelvis to y-axis [0.000000] speed [1.000000];
				turn rthigh to x-axis <0.000000> speed <200.000000>;
				turn rleg to x-axis <0.000000> speed <200.000000>;
				turn rfoot to x-axis <0.000000> speed <200.000000>;
				turn lthigh to x-axis <0.000000> speed <200.000000>;
				turn lleg to x-axis <0.000000> speed <200.000000>;
				turn lfoot to x-axis <0.000000> speed <200.000000>;
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

open()
{
	turn torso to x-axis <35.000000> speed <80.000000>;
	wait-for-turn torso around x-axis;
	turn arm to x-axis <35.000000> speed <150.000000>;
	turn tur to x-axis <-70.000000> speed <150.000000>;
	move rnano to x-axis [2.000000] speed [5.000000];
	move lnano to x-axis [-2.000000] speed [5.000000];
	wait-for-move rnano along x-axis;
	move rspray to z-axis [2.000000] speed [5.000000];
	move lspray to z-axis [2.000000] speed [5.000000];
	wait-for-move rspray along x-axis;
}

close()
{
	move rspray to z-axis [0.000000] speed [5.000000];
	move lspray to z-axis [0.000000] speed [5.000000];
	wait-for-move rspray along x-axis;
	move rnano to x-axis [0.000000] speed [5.000000];
	move lnano to x-axis [0.000000] speed [5.000000];
	wait-for-move rnano along x-axis;
	turn arm to x-axis <0.000000> speed <150.000000>;
	turn tur to x-axis <0.000000> speed <150.000000>;
	wait-for-turn tur around x-axis;
	turn torso to x-axis <0.000000> speed <80.000000>;
	wait-for-turn torso around x-axis;
}

Go()
{
	Static_Var_4 = 1;
	call-script open();
	turn turret to y-axis Static_Var_6 speed <160.000000>;
	wait-for-turn turret around y-axis;
	turn torso to x-axis <35.000000> speed <80.000000>;
	set INBUILDSTANCE to 1;
}

Stop()
{
	set INBUILDSTANCE to 0;
	turn turret to y-axis <0.000000> speed <160.000000>;
	wait-for-turn turret around y-axis;
	call-script close();
	Static_Var_4 = 0;
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	bMoving = FALSE;
	Static_Var_4 = 0;
	Static_Var_7 = 1;
	spray = torso;
	Static_Var_6 = 0;
	call-script InitState();
	start-script SmokeUnit();
	start-script MotionControl();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

StartBuilding(Func_Var_1)
{
	Static_Var_6 = Func_Var_1;
	start-script RequestState(0);
	signal 4;
	set INBUILDSTANCE to 1;
	}

StopBuilding()
{
	signal 4;
	set-signal-mask 4;
	sleep 6000;
	set-signal-mask 0;
	signal 4;
	start-script RequestState(1);
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

QueryNanoPiece(piecenum)
{
	if( spray == 0 )
	{
		piecenum = rspray;
	}
	if( spray != 0 )
	{
		piecenum = lspray;
	}
	spray = !spray;
}

TargetHeading(Func_Var_1)
{
	Static_Var_6 = 0 - Func_Var_1;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode lfoot type BITMAPONLY | BITMAP4;
		explode lleg type BITMAPONLY | BITMAP1;
		explode lthigh type BITMAPONLY | BITMAP2;
		explode pelvis type BITMAPONLY | BITMAP3;
		explode rfoot type BITMAPONLY | BITMAP4;
		explode rleg type BITMAPONLY | BITMAP1;
		explode rthigh type BITMAPONLY | BITMAP2;
		explode torso type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type FALL | BITMAP1;
		explode lfoot type FALL | BITMAP4;
		explode lleg type FALL | BITMAP1;
		explode lthigh type FALL | BITMAP2;
		explode pelvis type FALL | BITMAP3;
		explode rfoot type FALL | BITMAP4;
		explode rleg type FALL | BITMAP1;
		explode rthigh type FALL | BITMAP2;
		explode torso type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode torso type BITMAPONLY | BITMAP5;
		return (0);
	}
	corpsetype = 3;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode torso type BITMAPONLY | BITMAP5;
}
