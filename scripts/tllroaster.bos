piece base,body,turret1,turret2, turret3, barrel1, barrel2, barrel3, flare1, flare2, flare3,p;

static-var restore_delay,gun;

#define SIG_AIM 2
#define SIG_AIM3 8


#define SMOKEPIECE1 turret1

#define EXPLODEPIECE1 p
#define EXPLODEPIECE2 p
#define EXPLODEPIECE3 p

#include "explodeparts.h"
#include "exptype.h"

Create()
{ hide flare1;
  hide flare2;
  hide flare3;
  gun=0;
  restore_delay=3000;
  start-script SmokeUnit();
 }

SetMaxReloadTime(time)
{ restore_delay = time * 2;
 }

RestoreAfterDelay()
{ set-signal-mask SIG_AIM;
  sleep restore_delay;
  turn turret1 to y-axis 0 speed <10>;
 }
RestoreAfterDelay3()
{ set-signal-mask SIG_AIM3;
  sleep restore_delay;
  turn turret2 to y-axis 0 speed <85>;
  turn turret3 to y-axis 0 speed <85>;
 }

AimPrimary(heading,pitch)
{ signal SIG_AIM;
  set-signal-mask SIG_AIM;

  TURN turret1 to y-axis heading speed <10>;
  wait-for-turn turret1 around y-axis;
  start-script RestoreAfterDelay();
  return(TRUE);
 }

FirePrimary()
{ 
	show flare1;
	sleep 150;
	hide flare1;
 }

AimFromPrimary(piecenum)
{ piecenum=turret1;
 }

QueryPrimary(piecenum)
{ 
piecenum=flare1; 
 }

AimTertiary(heading,pitch)
{ signal SIG_AIM3;
  set-signal-mask SIG_AIM3;

 if ( heading >= <0> and heading <= <180> )
	{
	gun=0;
	TURN turret3 to y-axis heading speed <100>;
	wait-for-turn turret3 around y-axis;
	}
 if ( heading >= <180> and heading <= <360> )
	{
	gun=1;
	TURN turret2 to y-axis heading speed <100>;
	wait-for-turn turret2 around y-axis;
	}

start-script RestoreAfterDelay3();
  return(TRUE);
 }

FireTertiary()
{ 
if (gun == 0)
	{
	show flare3;
	sleep 150;
	hide flare3;
	}
if (gun == 1)
	{
	show flare2;
	sleep 150;
	hide flare2;
	}
 }

AimFromTertiary(piecenum)
{ 
if (gun == 0)
	{
	piecenum=turret3;
	}
if (gun == 1)
	{
	piecenum=turret2;
	}
 }

QueryTertiary(piecenum)
{ 
piecenum=flare3; 
 }


SweetSpot(piecenum)
{ piecenum=body;
 }

Killed( severity, corpsetype )
{ hide flare1;
  explode base type BITMAPONLY | BITMAP4;
  if (severity <= 25)
   { corpsetype = 1;
     explode turret1 type BITMAPONLY | BITMAP2;
     explode body type BITMAPONLY | BITMAP3;
     return( 0 );
    }
  explode barrel2 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP4;
  if (severity <= 50)
   { corpsetype = 2;
     return( 0 );
    }
  corpsetype = 3;
  explode body type SHATTER | EXPLODE_ON_HIT | BITMAP3;
  return( 0 );
 }
